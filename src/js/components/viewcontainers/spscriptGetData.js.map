{"version":3,"sources":["components/viewcontainers/spscriptGetData.tsx"],"names":[],"mappings":"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","file":"components/viewcontainers/spscriptGetData.js","sourcesContent":["import * as React from \"react\";\r\nlet update = require(\"react-addons-update\");\r\nimport { RestDao } from \"SPScript\"; //Need to add custom index.d.ts to SPScript module folder to resolve this name!\r\nimport SPScriptGetDataView from \"../views/SPScriptGetData_View\";\r\nimport DisplayResults from \"./DisplayResults\";\r\n\r\ninterface IProps {};\r\ninterface IState {data: any, message: string, showWarning: boolean};\r\n\r\nclass SPScriptGetData extends React.Component<IProps, IState> {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"SPScriptGetData constructor\");\r\n        this.state = {\r\n            data: [],\r\n            message: \"\",\r\n            showWarning: false\r\n        };\r\n    }\r\n\r\n    testitemdata = [{ \"Id\": 1, \"Title\": \"A\", \"ANumber\": 1.13, \"ID\": 1, \"Created\": \"2016-07-27T00:52:59Z\", \"AuthorId\": 9}];\r\n    testprofiledata = [{ \"PreferredName\": \"Gary Payne\", \"WorkPhone\": \"0212660753\", \"Department\": \"\", \"SPS-JobTitle\": \"Owner\"}];\r\n\r\n    componentDidMount() {\r\n        try {\r\n            let newState = update(this.state, {\r\n                message: {$set: \"\"}\r\n            });\r\n            this.setState(newState);\r\n        } catch (e) {\r\n            console.log(\"Error setting state: \" + e.message);\r\n            this.setState({data: [], message: \"Success from exception block\", showWarning: true});\r\n        }\r\n    }\r\n\r\n    getItemsFromList = () => {\r\n        if (typeof _spPageContextInfo === \"undefined\" || typeof _spPageContextInfo.webAbsoluteUrl === \"undefined\") {\r\n            let newState = update(this.state, {\r\n                    message: {$set: \"_spPageContextInfo is not defined - using hard coded test data!\"},\r\n                    data: {$set: this.testitemdata},\r\n                    showWarning: {$set: true}\r\n                }\r\n            );\r\n            this.setState(newState);\r\n        } else {\r\n            const dao = new RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n            const dataList = dao.lists(\"TestData\");\r\n            dataList.getItems().then( (results) => {\r\n                let newState = update(this.state, {\r\n                        message: {$set: \"Retrieved items from the list\"},\r\n                        data: {$set: results},\r\n                        showWarning: {$set: false}\r\n                    }\r\n                );\r\n                this.setState( newState );\r\n            });\r\n        }\r\n    }\r\n\r\n    getCurrentProfile = () => {\r\n        if (typeof _spPageContextInfo === \"undefined\" || typeof _spPageContextInfo.webAbsoluteUrl === \"undefined\") {\r\n            let newState = update(this.state, {\r\n                    message: {$set: \"_spPageContextInfo is not defined - using hard coded test data instead of current profile\"},\r\n                    data: {$set: this.testprofiledata},\r\n                    showWarning: {$set: true}\r\n                }\r\n            );\r\n            this.setState(newState);\r\n        } else {\r\n            const dao = new RestDao(_spPageContextInfo.webAbsoluteUrl);\r\n            dao.profiles.current().then( (results) => {\r\n                let newState = update(this.state, {\r\n                        message: {$set: \"Retrieved the current profile\"},\r\n                        data: {$set: results},\r\n                        showWarning: {$set: false}\r\n                    }\r\n                );\r\n                this.setState( newState );\r\n            });\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        console.log(\"SPScriptGetData render\");\r\n        return (\r\n            <div>\r\n                <SPScriptGetDataView getListItems={this.getItemsFromList} getProfile={this.getCurrentProfile} />\r\n                <DisplayResults data={this.state.data} message={this.state.message} isWarning={this.state.showWarning} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SPScriptGetData;"],"sourceRoot":"/source/"}